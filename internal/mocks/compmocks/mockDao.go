// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/calebtracey/rugby-data-api/internal/dao/comp (interfaces: DAOI)

// Package compmocks is a generated GoMock package.
package compmocks

import (
	context "context"
	reflect "reflect"

	response "github.com/calebtracey/rugby-data-api/external/models/response"
	gomock "github.com/golang/mock/gomock"
)

// MockDAOI is a mock of DAOI interface.
type MockDAOI struct {
	ctrl     *gomock.Controller
	recorder *MockDAOIMockRecorder
}

// MockDAOIMockRecorder is the mock recorder for MockDAOI.
type MockDAOIMockRecorder struct {
	mock *MockDAOI
}

// NewMockDAOI creates a new mock instance.
func NewMockDAOI(ctrl *gomock.Controller) *MockDAOI {
	mock := &MockDAOI{ctrl: ctrl}
	mock.recorder = &MockDAOIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDAOI) EXPECT() *MockDAOIMockRecorder {
	return m.recorder
}

// GetLeaderboardData mocks base method.
func (m *MockDAOI) GetLeaderboardData(arg0 context.Context, arg1 string) (response.LeaderboardResponse, *response.ErrorLog) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLeaderboardData", arg0, arg1)
	ret0, _ := ret[0].(response.LeaderboardResponse)
	ret1, _ := ret[1].(*response.ErrorLog)
	return ret0, ret1
}

// GetLeaderboardData indicates an expected call of GetLeaderboardData.
func (mr *MockDAOIMockRecorder) GetLeaderboardData(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLeaderboardData", reflect.TypeOf((*MockDAOI)(nil).GetLeaderboardData), arg0, arg1)
}
