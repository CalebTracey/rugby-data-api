// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/calebtracey/rugby-data-api/internal/facade/comp (interfaces: FacadeI)

// Package compmocks is a generated GoMock package.
package compmocks

import (
	context "context"
	reflect "reflect"

	request "github.com/calebtracey/rugby-models/pkg/dtos/request"
	response "github.com/calebtracey/rugby-models/pkg/dtos/response"
	gomock "github.com/golang/mock/gomock"
)

// MockFacadeI is a mock of FacadeI interface.
type MockFacadeI struct {
	ctrl     *gomock.Controller
	recorder *MockFacadeIMockRecorder
}

// MockFacadeIMockRecorder is the mock recorder for MockFacadeI.
type MockFacadeIMockRecorder struct {
	mock *MockFacadeI
}

// NewMockFacadeI creates a new mock instance.
func NewMockFacadeI(ctrl *gomock.Controller) *MockFacadeI {
	mock := &MockFacadeI{ctrl: ctrl}
	mock.recorder = &MockFacadeIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFacadeI) EXPECT() *MockFacadeIMockRecorder {
	return m.recorder
}

// AllLeaderboardData mocks base method.
func (m *MockFacadeI) AllLeaderboardData(arg0 context.Context) response.LeaderboardResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AllLeaderboardData", arg0)
	ret0, _ := ret[0].(response.LeaderboardResponse)
	return ret0
}

// AllLeaderboardData indicates an expected call of AllLeaderboardData.
func (mr *MockFacadeIMockRecorder) AllLeaderboardData(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AllLeaderboardData", reflect.TypeOf((*MockFacadeI)(nil).AllLeaderboardData), arg0)
}

// LeaderboardData mocks base method.
func (m *MockFacadeI) LeaderboardData(arg0 context.Context, arg1 request.LeaderboardRequest) response.LeaderboardResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LeaderboardData", arg0, arg1)
	ret0, _ := ret[0].(response.LeaderboardResponse)
	return ret0
}

// LeaderboardData indicates an expected call of LeaderboardData.
func (mr *MockFacadeIMockRecorder) LeaderboardData(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LeaderboardData", reflect.TypeOf((*MockFacadeI)(nil).LeaderboardData), arg0, arg1)
}
